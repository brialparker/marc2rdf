/*
 foaf:name, foaf:firstName and foaf:lastName generated by inverted commas
*/

SPARQL
DEFINE sql:log-enable 2
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX radatana: <http://def.bibsys.no/xmlns/radatana/1.0#>

INSERT INTO <http://data.deichman.no/books> { 
?creator foaf:lastName `bif:left(str(?catalogueName), bif:strchr(str(?catalogueName), ','))`  ;
  foaf:firstName `bif:trim(bif:subseq(str(?catalogueName), bif:strchr(str(?catalogueName), ',') + 1))` ;
  foaf:name `bif:trim(bif:concat(bif:subseq(str(?catalogueName), bif:strchr(str(?catalogueName), ',') + 1), " ", bif:left(str(?catalogueName), bif:strchr(str(?catalogueName), ','))))` .
}
WHERE {
  GRAPH <http://data.deichman.no/books> {
    ?creator a foaf:Person ;
      radatana:catalogueName ?catalogueName .
    FILTER(bif:strcontains(?catalogueName, ",")) .
    FILTER NOT EXISTS {?creator foaf:name ?name}
  }
};

/*
 foaf:name generated on all other authors where name is not inverted
 typically Chinese, Icelandic, etc. 
*/

SPARQL
DEFINE sql:log-enable 2
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX radatana: <http://def.bibsys.no/xmlns/radatana/1.0#>

INSERT INTO <http://data.deichman.no/books> { 
  ?creator foaf:name ?catalogueName . 
}
WHERE { 
GRAPH <http://data.deichman.no/books> {
  ?creator a foaf:Person ;
    radatana:catalogueName ?catalogueName .
  }
  FILTER NOT EXISTS { ?creator foaf:name ?name }
};
