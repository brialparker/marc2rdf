/* spørringer som lager statements om autogenerert likhet mellom verk */


/* Likhet mellom verk som har samme emne, målgruppe, overordnet genre og litterær form */

/*SPARQL
DEFINE sql:log-enable 2
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX deichman: <http://data.deichman.no/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  GRAPH <http://data.deichman.no/books> {
    ?work1 fabio:hasManifestation [dct:subject ?subject] ;
       fabio:hasManifestation [dct:audience ?audience] ;
       fabio:hasManifestation [dbo:literaryGenre [skos:broader ?genre]] ;
       fabio:hasManifestation [deichman:literaryFormat ?format] .
  FILTER (!regex(?subject, "subjectMultilingual"))
    ?work2 fabio:hasManifestation [dct:subject ?subject] ;
       fabio:hasManifestation [dct:audience ?audience] ;
       fabio:hasManifestation [dbo:literaryGenre [skos:broader ?genre]] ;
       fabio:hasManifestation [deichman:literaryFormat ?format] .
    FILTER (?work1 != ?work2)
  }
};*/


/* Likhet mellom verk som har to like emner, samme målgruppe og litterær form, og som ikke har likhetsrelasjon fra før */

/*SPARQL
DEFINE sql:log-enable 2
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX deichman: <http://data.deichman.no/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  GRAPH <http://data.deichman.no/books> {
    ?work1 fabio:hasManifestation [dct:subject ?subject1] ;
       fabio:hasManifestation [dct:subject ?subject2] ;
       fabio:hasManifestation [dct:audience ?audience] ;
       fabio:hasManifestation [deichman:literaryFormat ?format] .
    FILTER (!regex(?subject1, "subjectMultilingual"))
    FILTER (!regex(?subject2, "subjectMultilingual"))
    FILTER (?subject1 != ?subject2)
    ?work2 fabio:hasManifestation [dct:subject ?subject1] ;
       fabio:hasManifestation [dct:subject ?subject2] ;
       fabio:hasManifestation [dct:audience ?audience] ;
       fabio:hasManifestation [deichman:literaryFormat ?format] .
    FILTER (?work1 != ?work2)
  }
  MINUS {
    GRAPH <http://data.deichman.no/noeSomLigner> {
    ?work1 deichman:autoGeneratedSimilarity ?similar .  
    }
  }
};*/


/* Likhet mellom verk med to like tone-tagger fra Novelist og lik målgruppe */

SPARQL
DEFINE sql:log-enable 2
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX deichman: <http://data.deichman.no/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  ?work1 fabio:hasManifestation [deichman:novelistTone ?tone1 ; deichman:novelistTone ?tone2 ; dct:audience ?audience  ] .
  FILTER (?tone1 != ?tone2)
  ?work2 fabio:hasManifestation [deichman:novelistTone ?tone1 ; deichman:novelistTone ?tone2 ; dct:audience ?audience  ] .
  FILTER (?work1 != ?work2)
};

/* Felles tone, novelist-emne og målgruppe */

SPARQL
DEFINE sql:log-enable 2
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX deichman: <http://data.deichman.no/>
PREFIX dct: <http://purl.org/dc/terms/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  ?work1 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; deichman:novelistSubject ?novSubject ] .
  ?work2 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; deichman:novelistSubject ?novSubject ] .
  FILTER (?work1 != ?work2)
};

/* Felles overordnet sjanger, tone og målgruppe */

/*
SPARQL
DEFINE sql:log-enable 2
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX deichman: <http://data.deichman.no/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  ?work1 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; dbo:literaryGenre [skos:broader ?genre] ] .
  ?work2 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; dbo:literaryGenre [skos:broader ?genre] ] .
  FILTER (?work1 != ?work2)
};
*/

/* Felles emne, tone og målgruppe */

SPARQL
DEFINE sql:log-enable 2
PREFIX fabio: <http://purl.org/spar/fabio/>
PREFIX deichman: <http://data.deichman.no/>
PREFIX dct: <http://purl.org/dc/terms/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work1 deichman:autoGeneratedSimilarity ?work2 .
} WHERE {
  ?work1 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; dct:subject ?subject ] .
  ?work2 fabio:hasManifestation [deichman:novelistTone ?tone ; dct:audience ?audience ; dct:subject ?subject ] .
  FILTER (?work1 != ?work2)
};

/* Speiling av enveisrelasjoner */

SPARQL
DEFINE sql:log-enable 2
SPARQL
DEFINE sql:log-enable 2
PREFIX deichman: <http://data.deichman.no/>
INSERT INTO <http://data.deichman.no/noeSomLigner> {
  ?work2 deichman:autoGeneratedSimilarity ?work1 .
} WHERE {
  GRAPH <http://data.deichman.no/noeSomLigner> {
    ?work1 deichman:autoGeneratedSimilarity ?work2 .
	MINUS {?work2 deichman:autoGeneratedSimilarity ?work1 .}
  }
};
