h3 Mapping Editor
// The mapping div
div id="buttons"
  button[type="button" id="load_template" class="gen" style="margin-left:48px"]  = "Load Basic Template"
  button[type="button" id="save_mapping" class="gen"]  = "Update Mapping"
  button[type="button" id="toJSON" class="convert" title="Copy from Editor to JSON" style="margin-left:800px"] = "Editor to JSON"
  button[type="button" id="toForm" class="convert" title="Copy from JSON to Editor" style="margin-left:12px"] = "JSON to Editor"
  
  
span[id="mapping_info" class="info" style="margin-left:48px"]
span[id="mapping_error" class="error" style="margin-left:48px"]
    
div id="auto"
  div id="contents"
    div id="jsoneditor"
      h2 Editor
    div id="splitter"
      p Vocabularies
      button[type="button" id="reload_vocabularies_list" class="gen"]  = "reload"
      ul id="vocabularies_list"
        - vocabs = Vocabulary.all.sort_by {|v|v.prefix}
        - vocabs.each do |vocab|
          li[title=(vocab.uri)] #{vocab.prefix.upcase}
    div id="jsonformatter"
      h2 JSON
      pre NB! if editing JSON directly below, remember to click 'JSON to Editor' button (upper right) before 'Update Mapping'

javascript:
  // ** global vars
  var session_key = $('#active_session_key').html();
  $(document).ajaxSend(function(e, xhr, settings) {
    xhr.setRequestHeader('SECRET_SESSION_KEY', session_key);
  });
  
  // disable Firefox spellcheck
  document.body.spellcheck = false;
  
  var editor_div = document.getElementById("jsoneditor");
  var text_div = document.getElementById("jsonformatter");
  var domSplitter = document.getElementById('splitter');
  var editor = new jsoneditor.JSONEditor(editor_div);
  var formatter = new jsoneditor.JSONFormatter(text_div);
  
  var toJSON = document.getElementById('toJSON');
  toJSON.innerHTML = '<div class="convert-right"></div>';
  var toForm = document.getElementById('toForm');
  toForm.innerHTML = '<div class="convert-left"></div>';
  // ** end JSON editor
  
  // get JSON mapping
  var json = $.getJSON('/api/mappings/?id=#{mapping.id}', function() {
      editor.set(JSON.parse(json.responseText).mapping["mapping"]);
      formatter.set(editor.get());
    });
  // conversions
  toForm.onclick = function () {
    editor.set(formatter.get());
  };
  toJSON.onclick = function () {
    formatter.set(editor.get());
  };  

  // ** load template into editor
  $('button#load_template').on('click', function() {
    var json = $.getJSON('/api/mappings/template', function() {
      editor.set(JSON.parse(json.responseText).mapping);
      formatter.set(editor.get());
    });
  }); 

  // ** reload vocabularies listing
  $('#reload_vocabularies_list').on('click', function() {
    var json = $.getJSON('/api/vocabularies', function(response) {
      $("#vocabularies_list").empty();
      $.each(response["vocabularies"], function(index, vocab){
        var data = '<li title="'+vocab.uri+'">'+vocab.prefix.toUpperCase()+'</li>';
        $("#vocabularies_list").append(data);
      });
    });
  });
