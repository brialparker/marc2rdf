h3 Edit Harvester: #{harvester.name}
div class="divdot inputf"  
  table class="genform"
    form id="edit_harvester_form" 
      tr
        td
        td: input[type="hidden" id="save_harvester_id" value=(harvester.id)]
      tr
        td name
        td: input[type="text" id="save_harvester_name" value=(harvester.name)]
      tr
        td description
        td: input[type="text" id="save_harvester_description" value=(harvester.description)]
      tr
        td protocol
        td
          select[id="save_harvester_protocol"]
            option[selected=("selected" if harvester.protocol == "http")] http
            option[selected=("selected" if harvester.protocol == "sparql")] sparql
        td (http=generic xml harvester, sparql=not implemented yet)
      tr
        td: hr
        td url settings
      tr
        td prefix
        td: input[type="text" id="save_harvester_url_prefix" value=(harvester.url['prefix'])]
      tr
        td suffix
        td: input[type="text" id="save_harvester_url_suffix" value=(harvester.url['suffix'])]
      tr
        td: hr
        td harvest settings       
      tr
        td subject
        td
          select[id="save_harvester_subject"]
            option[selected=("selected" if harvester.subject == "work")] work
            option[selected=("selected" if harvester.subject == "edition")] edition
        td (work=harvest to work, edition=harvest to edition)
      
      // NB! to parse preserve predicates as hash, we need to use class instead of id
      table[id="harvester_predicates" class="genform"]
        tr
          td: button[type='button' class="add_table_row"]  = "add row"
          td predicate
          td datatype
          td xpath
          td regex_strip
        - if harvester.predicates.empty?
          tr
            td 
            td: input[type="text" class="harvester_predicate"]
            td: input[type="text" class="harvester_datatype"]
            td: input[type="text" class="harvester_xpath"]
            td: input[type="text" class="harvester_regex_strip"]
            td: button[type='button' class="remove_table_row"]  = "delete row"
        - else
          - harvester.predicates.each do |k,v|
            tr
              td
              td: input[type="text" class="harvester_predicate" value=(k)]
              td: input[type="text" class="harvester_datatype" value=(v['datatype'])]
              td: input[type="text" class="harvester_xpath" value=(v['xpath'])]
              td: input[type="text" class="harvester_regex_strip" value=(v['regex_strip'])]
              td: button[type='button' class="remove_table_row"]  = "delete row"

      // NB! to parse namespaces as hash, we need to use class instead of id
      table[id="harvester_namespaces" class="genform"]
        tr
          td: button[type='button' class="add_table_row"]  = "add row"
          td namespace
          td url
        - if harvester.namespaces.empty?
          tr
            td 
            td: input[type="text" class="harvester_namespace_prefix"]
            td: input[type="text" class="harvester_namespace_url"]
            td: button[type='button' class="remove_table_row"]  = "delete row"
        - else
          - harvester.namespaces.each do |k,v|
            tr
              td
              td: input[type="text" class="harvester_namespace_prefix" value=(k)]
              td: input[type="text" class="harvester_namespace_url" value=(v)]
              td: button[type='button' class="remove_table_row"]  = "delete row"
                          
      tr
        td 
          button[type="button" id="save_harvester" class="gen"]  = "Save"
          button[type="button" id="delete_harvester" class="gen"]  = "Delete"
        td
          span[id="save_harvester_info" class="info" style="margin-left:48px"]
          span[id="save_harvester_error" class="error" style="margin-left:48px"]    
